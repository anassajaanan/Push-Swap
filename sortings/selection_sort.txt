void    bring_min_to_top(t_stack *a)
{
    int min = get_min(*a);
    struct s_stack_node *p = a->top;
    int i = 0;

    while (p->val != min)
    {
        p = p->next;
        i++;
    }
    if (i < a->length / 2)
    {
        while (a->top->val != min)
            ft_ra(a);
    }
    else
    {
        while (a->top->val != min)
            ft_rra(a);
    }
}

void    sort(t_stack *a, t_stack *b)
{
    if (is_stack_sorted(a))
        return ;
    while (a->length > 3)
    {
        bring_min_to_top(a);
        ft_pb(a, b);
    }
    if (a->length == 1)
        return ;
    else if (a->length == 2)
    {
        if (a->top->val > a->top->next->val)
            ft_sa(a);
    }
    else if (a->length == 3)
    {
        int max = get_max(*a);
        if (a->top->val == max)
            ft_ra(a);
        else if (a->top->next->val == max)
            ft_rra(a);
        if (a->top->val > a->top->next->val)
            ft_sa(a);
    }
    while (b->top)
        ft_pa(a, b);
}